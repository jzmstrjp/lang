generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProblemType {
  short
  medium
  long
}

enum InteractionIntent {
  request
  question
  proposal
  opinion
  agreement
  info
}

model Problem {
  id                String             @id @default(cuid())
  type              ProblemType
  english           String
  japaneseReply     String
  options           Json
  correctIndex      Int
  audioEnUrl        String?
  audioJaUrl        String?
  compositeImageUrl String?
  sceneId           String
  scenePrompt       String
  speakersSceneA    String
  speakersSceneB    String
  nuance            String?
  genre             String?
  patternGroup      String?
  wordCount         Int
  interactionIntent InteractionIntent
  isCached          Boolean            @default(false)
  qualityCheck      Boolean            @default(false)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  asset             ProblemAsset?

  @@index([type, isCached, qualityCheck])
  @@index([sceneId])
  @@unique([english, interactionIntent, sceneId])
  @@map("problems")
}

model ProblemAsset {
  id            String   @id @default(cuid())
  problemId     String   @unique
  scenePrompt   String
  compositeImage String?
  audioEn       String
  audioJa       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  problem       Problem  @relation(fields: [problemId], references: [id], onDelete: Cascade)

  @@map("problem_assets")
}
